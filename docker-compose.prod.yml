version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: ventas-ceili-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ventasceili2025
      MONGO_INITDB_DATABASE: ventas_ceili
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ventas-network

  # Go Backend API
  backend:
    build: ./backend
    container_name: ventas-ceili-backend
    restart: unless-stopped
    environment:
      - PORT=8080
      - MONGO_URI=mongodb://admin:ventasceili2025@mongo:27017/ventas_ceili?authSource=admin
      - GIN_MODE=release
    ports:
      - "8080:8080"
    depends_on:
      - mongo
    networks:
      - ventas-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build: ./frontend
    container_name: ventas-ceili-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ventas-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ventas-ceili-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ventas-network

volumes:
  mongo_data:
    driver: local

networks:
  ventas-network:
    driver: bridge
